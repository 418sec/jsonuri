{"version":3,"file":"insert.js","sourceRoot":"","sources":["../../src/methods/insert.ts"],"names":[],"mappings":";;AAAA,gCAAsI;AACtI,6BAAuB;AAEvB,gBAAgC,IAAI,EAAE,IAAqB,EAAE,KAAU,EAAE,SAAwC;IAC/G,IAAI,GAAG,IAAI,GAAG,EAAE,CAAA;IAChB,IAAI,CAAC,CAAC,IAAI,CAAC;QAAE,OAAO,gBAAS,CAAC,+BAAwB,CAAC,CAAA;IACvD,IAAI,CAAC,SAAS;QAAE,MAAM,IAAI,KAAK,CAAC,yBAAkB,CAAC,CAAA;IAEnD,IAAM,MAAM,GAAG,aAAG,CAAC,IAAI,EAAE,IAAI,GAAG,KAAK,CAAC,CAAA;IACtC,IAAI,CAAC,cAAO,CAAC,MAAM,CAAC;QAAE,MAAM,IAAI,KAAK,CAAC,iBAAe,oBAAe,CAAC,CAAA;IAErE,IAAM,KAAK,GAAG,CAAC,CAAC,qBAAc,CAAC,EAAE,IAAI,MAAA,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAA;IAE1D,IAAI,OAAO,GAAG,KAAK,CAAA;IAEnB,IAAI,SAAS,KAAK,OAAO,EAAE;QACzB,OAAO,GAAG,KAAK,GAAG,CAAC,CAAA;KACpB;SAAM,IAAI,SAAS,KAAK,QAAQ,EAAE;QACjC,OAAO,GAAG,KAAK,CAAA;KAChB;SAAM,IAAI,SAAS,KAAK,QAAQ,EAAE;QACjC,OAAO;KACR;IACD,kBAAW,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,CAAC,CAAA;AACrC,CAAC;AApBD,yBAoBC","sourcesContent":["import { THE_PARAMETER_IS_ILLEGAL, DIRECTION_REQUIRED, MUST_BE_ARRAY, isArray, combingPathKey, insertValue, showError } from '../util'\nimport get from './get'\n\nexport default function insert (data, path: string | number, value: any, direction: 'before' | 'after' | 'append'): void {\n  path = path + ''\n  if (!(data)) return showError(THE_PARAMETER_IS_ILLEGAL)\n  if (!direction) throw new Error(DIRECTION_REQUIRED)\n\n  const parent = get(data, path + '/..')\n  if (!isArray(parent)) throw new Error(`insert node ${MUST_BE_ARRAY}`)\n\n  const index = +(combingPathKey({ path }).keys.pop() || '')\n\n  let toIndex = index\n\n  if (direction === 'after') {\n    toIndex = index + 1\n  } else if (direction === 'before') {\n    toIndex = index\n  } else if (direction === 'append') {\n    // TODO\n  }\n  insertValue(parent, toIndex, value)\n}\n"]}