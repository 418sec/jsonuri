{"version":3,"file":"rm.js","sourceRoot":"","sources":["../../src/methods/rm.ts"],"names":[],"mappings":";;AAAA,gCAAiE;AACjE,6BAAuB;AAEvB,YAA4B,IAAS,EAAE,IAAqB;IAC1D,IAAI,GAAG,IAAI,GAAG,EAAE,CAAA;IAChB,IAAI,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC;QAAE,OAAM;IAC3B,IAAI,CAAC,oBAAa,CAAC,IAAI,CAAC,EAAE;QACxB,eAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;QACpB,OAAM;KACP;IAED,IAAI,MAAM,GAAG,aAAG,CAAC,IAAI,EAAE,IAAI,GAAG,KAAK,CAAC,CAAA;IACpC,IAAI,CAAC,MAAM;QAAE,OAAM;IACnB,IAAI,GAAG,GAAG,qBAAc,CAAC,EAAE,IAAI,MAAA,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,CAAA;IAEnD,eAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,CAAA;AACvB,CAAC;AAbD,qBAaC","sourcesContent":["import { isComplexPath, combingPathKey, delValue } from '../util'\nimport get from './get'\n\nexport default function rm (data: any, path: string | number): void {\n  path = path + ''\n  if (!(data && path)) return\n  if (!isComplexPath(path)) {\n    delValue(data, path)\n    return\n  }\n\n  let parent = get(data, path + '/..')\n  if (!parent) return\n  let key = combingPathKey({ path }).keys.pop() || ''\n\n  delValue(parent, key)\n}\n"]}