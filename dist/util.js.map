{"version":3,"file":"util.js","sourceRoot":"","sources":["../src/util.ts"],"names":[],"mappings":";;AACa,QAAA,uBAAuB,GAAG,yBAAyB,CAAA;AACnD,QAAA,aAAa,GAAG,iBAAiB,CAAA;AACjC,QAAA,wBAAwB,GAAG,0BAA0B,CAAA;AACrD,QAAA,kBAAkB,GAAG,iDAAiD,CAAA;AACtE,QAAA,uBAAuB,GAAG,yBAAyB,CAAA;AAEhE,kBAAqC,CAAC;AAAtC,oBAAsC;AAEzB,QAAA,OAAO,GAAG,KAAK,CAAC,OAAO,CAAA;AAEpC,kBAA0B,CAAC;IACzB,OAAO,OAAO,CAAC,KAAK,QAAQ,CAAA;AAC9B,CAAC;AAFD,4BAEC;AAED,mBAAoB,CAAC;IACnB,OAAO,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA,CAAC,gEAAgE;AAC7F,CAAC;AAED,mBAA2B,CAAC;IAC1B,OAAO,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;AAC/B,CAAC;AAFD,8BAEC;AAED,IAAM,OAAO,GAAG,IAAI,CAAA;AACpB,uBAA+B,CAAC;IAC9B,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;AACxB,CAAC;AAFD,sCAEC;AAED,kBAA0B,CAAC;IACzB,sDAAsD;IACtD,0EAA0E;IAC1E,IAAM,IAAI,GAAG,OAAO,CAAC,CAAA;IACrB,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,UAAU,CAAC,CAAA;AAChE,CAAC;AALD,4BAKC;AAED,kBAA0B,CAAC;IACzB,OAAO,CAAC,GAAG,EAAE,CAAA;AACf,CAAC;AAFD,4BAEC;AAED,mBAA2B,CAAC;IAC1B,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;AAClB,CAAC;AAFD,8BAEC;AAED,oBAA4B,CAAC;IAC3B,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,CAAA;AACpB,CAAC;AAFD,gCAEC;AACD;;;;;GAKG;AACH,kBAA0B,GAAG,EAAE,GAAoB,EAAE,KAAK;IACxD,IAAI,CAAC,eAAO,CAAC,GAAG,CAAC,EAAE;QACjB,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;QAChB,OAAM;KACP;IAED,IAAI,GAAG,KAAK,QAAQ,EAAE;QACpB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;YAAE,MAAM,IAAI,KAAK,CAAC,YAAU,KAAK,SAAI,+BAAyB,CAAC,CAAA;QAEpF,IAAI,KAAK,GAAG,GAAG,CAAC,MAAM;YAAE,GAAG,CAAC,MAAM,GAAG,KAAK,CAAA;QAE1C,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;QACjB,OAAM;KACP;IAED,qCAAqC;IACrC,IAAI,KAAK,GAAW,CAAC,GAAG,CAAA;IACxB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;QACrB,SAAS,CAAC,UAAQ,GAAG,SAAI,+BAAyB,CAAC,CAAA;QACnD,OAAM;KACP;IAED,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;IACxC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC,CAAA;AAC7B,CAAC;AAxBD,4BAwBC;AAED;;GAEG;AACH,kBAA0B,GAAG,EAAE,GAAoB;IACjD,IAAI,eAAO,CAAC,GAAG,CAAC,EAAE;QAChB,IAAI,KAAK,GAAW,CAAC,GAAG,CAAA;QACxB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;YAAE,OAAM;QAC7B,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAA;KACrB;SAAM;QACL,OAAO,GAAG,CAAC,GAAG,CAAC,CAAA;KAChB;AACH,CAAC;AARD,4BAQC;AAED;;GAEG;AACH,qBAA6B,GAAU,EAAE,GAAW,EAAE,KAAK,EAAE,SAAkD;IAAlD,0BAAA,EAAA,mBAAkD;IAC7G,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM;QAAE,MAAM,IAAI,KAAK,CAAC,+BAAuB,CAAC,CAAA;IACzE,QAAQ,SAAS,EAAE;QACjB,KAAK,QAAQ;YACX,GAAG,GAAG,GAAG,GAAG,CAAC,CAAA;YACb,MAAK;QACP,KAAK,QAAQ;YACX,SAAS,CAAC,MAAM,CAAC,CAAA;KACpB;IAED,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,KAAK,CAAC,CAAA;AAC3B,CAAC;AAXD,kCAWC;AAaD,6BAA6B;AAC7B,wBAAgC,KAAqB;IACnD,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,IAAI,EAAE,CAAA;IAC7B,4BAA4B;IAC5B,8BAA8B;IAC9B,IAAI;IACJ,IAAI,IAAI,CAAA;IACR,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;QACf,IAAI,GAAI,KAAK,CAAC,IAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;KACzC;SAAM,IAAI,CAAC,IAAI,EAAE;QAChB,IAAI,GAAG,KAAK,CAAC,IAAI,CAAA;KAClB;IACD,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;IAE3B,kCAAkC;IAClC,0CAA0C;IAC1C,2DAA2D;IAC3D,IAAI;IAEJ,UAAU;IACV,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;QACxB,IAAI,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAA;QACzB,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;KACnB;IAED,IAAI;IACJ,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;QACzB,IAAI,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;QAC1B,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;KACnB;IAED,KAAK;IACL,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;QAC1B,IAAI,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;QAC3B,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAA;QAC5B,OAAO,IAAI,CAAC,EAAE,CAAC,CAAA;QACf,OAAO,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAA;QACnB,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;QAClB,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAA;KACvB;IACD,IAAM,GAAG,GAAG;QACV,IAAI,MAAA;QACJ,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;KACrB,CAAA;IAED,OAAO,GAAG,CAAA;AACZ,CAAC;AA7CD,wCA6CC","sourcesContent":["\nexport const IS_NOT_A_NATURAL_NUMBER = 'is not a natural number'\nexport const MUST_BE_ARRAY = 'must be a Array'\nexport const THE_PARAMETER_IS_ILLEGAL = 'the parameter is illegal'\nexport const DIRECTION_REQUIRED = `direction must be 'before' | 'after' | 'append'`\nexport const THE_INDEX_OUT_OF_BOUNDS = 'the Index Out of Bounds'\n\nexport function noop () { /* noop */ }\n\nexport const isArray = Array.isArray\n\nexport function isString (s) {\n  return typeof s === 'string'\n}\n\nfunction isInteger (n) {\n  return Number.isInteger(n) // || typeof n === 'number' && isFinite(n) && Math.ceil(n) === n\n}\n\nexport function isNatural (n) {\n  return isInteger(n) && n >= 0\n}\n\nconst pathReg = /\\//\nexport function isComplexPath (s) {\n  return pathReg.test(s)\n}\n\nexport function isObject (o) {\n  // [^Undefined, Null, boolean, Number, String, Symbol]\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures\n  const type = typeof o\n  return o != null && (type === 'object' || type === 'function')\n}\n\nexport function toString (s) {\n  return s + ''\n}\n\nexport function showError (s) {\n  console.error(s)\n}\n\nexport function throwError (s) {\n  throw new Error(s)\n}\n/**\n * 让数组的变化可被监听\n * @param obj\n * @param key\n * @param value\n */\nexport function setValue (obj, key: string | number, value) {\n  if (!isArray(obj)) {\n    obj[key] = value\n    return\n  }\n\n  if (key === 'length') {\n    if (!isNatural(value)) throw new Error(`value: ${value} ${IS_NOT_A_NATURAL_NUMBER}`)\n\n    if (value > obj.length) obj.length = value\n\n    obj.splice(value)\n    return\n  }\n\n  // if isArray, key should be a number\n  let index: number = +key\n  if (!isNatural(index)) {\n    showError(`key: ${key} ${IS_NOT_A_NATURAL_NUMBER}`)\n    return\n  }\n\n  obj.length = Math.max(obj.length, index)\n  obj.splice(index, 1, value)\n}\n\n/**\n * 让数组的删除可被监听\n */\nexport function delValue (obj, key: string | number) {\n  if (isArray(obj)) {\n    let index: number = +key\n    if (!isNatural(index)) return\n    obj.splice(index, 1)\n  } else {\n    delete obj[key]\n  }\n}\n\n/**\n * insertValue\n */\nexport function insertValue (arr: any[], key: number, value, direction: 'before' | 'after' | 'append' = 'after') {\n  if (key < 0 || key > arr.length) throw new Error(THE_INDEX_OUT_OF_BOUNDS)\n  switch (direction) {\n    case 'before':\n      key = key - 1\n      break\n    case 'append':\n      showError('TODO')\n  }\n\n  arr.splice(key, 0, value)\n}\n\n/**\n * Combing path keys\n * @author @linkjun\n * @param  {Array} keys  ['','menu','id','','.']\n * @return {Array}       ['menu','id']\n */\nexport interface CombingOptions {\n  keys?: (string | null)[]\n  path?: string\n}\n\n// let combingCache: any = {}\nexport function combingPathKey (param: CombingOptions): { keys: string[], path: string } {\n  const path = param.path || ''\n  // if (combingCache[path]) {\n  //   return combingCache[path]\n  // }\n  let keys\n  if (!param.keys) {\n    keys = (param.path as string).split('/')\n  } else if (!path) {\n    keys = param.keys\n  }\n  keys = keys.filter(Boolean)\n\n  // // 处理 a../,  ../b../ 此类错误路径 待优化\n  // if (/\\b\\.\\.+\\/*/.test(keys.join(''))) {\n  //   throw new Error(`error path ${path || keys.join('')}`)\n  // }\n\n  // {empty}\n  while (~keys.indexOf('')) {\n    let _i = keys.indexOf('')\n    keys.splice(_i, 1)\n  }\n\n  // .\n  while (~keys.indexOf('.')) {\n    let _i = keys.indexOf('.')\n    keys.splice(_i, 1)\n  }\n\n  // ..\n  while (~keys.indexOf('..')) {\n    let _i = keys.indexOf('..')\n    keys[_i] = keys[_i - 1] = ''\n    delete keys[_i]\n    delete keys[_i - 1]\n    keys.splice(_i, 1)\n    keys.splice(_i - 1, 1)\n  }\n  const ret = {\n    keys,\n    path: keys.join('/')\n  }\n\n  return ret\n}\n"]}