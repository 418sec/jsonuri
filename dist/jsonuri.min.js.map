{"version":3,"sources":["jsonuri.js"],"names":["global","factory","exports","module","define","amd","JsonUri","this","noop","isInteger","num","Number","isObject","val","Object","prototype","toString","call","isArray","objectForeach","obj","callback","keys","forEach","prop","arrayMove","arr","old_index","new_index","length","k","push","undefined","splice","normalizePath","_len","arguments","path","Array","_key","arrPro","concat","apply","join","split","combingPathKey","walk","_walk","key","raw","descentionFn","pop","ascentionFn","indexOf","_i","get","data","set","value","rm","tmp","swap","pathA","pathB","_a","_b","mv","sequence","a_parent","b_parent","_index","console","error","a_index","b_index","up","gap","dataItem","dataArray","targetIndex","down","insert","direction","parent","index","filter","item","slice","isAfter","target","min","max","String","cur","i","_nextKey","_curType","Math"],"mappings":";;;;;CAKC,SAAUA,EAAQC,GACE,gBAAZC,UAA0C,mBAAXC,QAAyBF,EAAQC,SACrD,kBAAXE,SAAyBA,OAAOC,IAAMD,QAAQ,WAAYH,GAChEA,EAASD,EAAOM,QAAUN,EAAOM,cAClCC,KAAM,SAAUL,GAAW,YAE3B,SAASM,MAET,QAASC,GAAUC,GACjB,MAAOC,QAAOF,UAAUC,GAG1B,QAASE,GAASC,GAChB,MAA+C,oBAAxCC,OAAOC,UAAUC,SAASC,KAAKJ,GAGxC,QAASK,GAAQL,GACf,MAA+C,mBAAxCC,OAAOC,UAAUC,SAASC,KAAKJ,GAGxC,QAASM,GAAcC,EAAKC,GAI1B,MAHAP,QAAOQ,KAAKF,GAAKG,QAAQ,SAAUC,GACjCH,EAASD,EAAII,GAAOA,EAAMJ,KAErBA,EAGT,QAASK,GAAUC,EAAKC,EAAWC,GACjC,GAAIA,GAAaF,EAAIG,OAEnB,IADA,GAAIC,GAAIF,EAAYF,EAAIG,OACjBC,IAAM,GACXJ,EAAIK,KAAKC,OAIb,OADAN,GAAIO,OAAOL,EAAW,EAAGF,EAAIO,OAAON,EAAW,GAAG,IAC3CD,EAKT,QAASQ,KACP,IAAK,GAAIC,GAAOC,UAAUP,OAAQQ,EAAOC,MAAMH,GAAOI,EAAO,EAAGA,EAAOJ,EAAMI,IAC3EF,EAAKE,GAAQH,UAAUG,EASzB,OALAF,GAAOG,EAAOC,OAAOC,MAAMF,EAAQH,GAAMM,KAAK,KAAKC,MAAM,KACzDP,GAAQ,IAAKQ,EAAeR,GAAMM,KAAK,MAAMA,KAAK,IACrC,MAATN,IACFA,GAAQ,KAEHA,EAWT,QAASS,KAOP,QAASC,GAAM3B,GAYb,MAXAD,GAAcC,EAAK,SAAUP,EAAKmC,EAAKC,GACrCZ,EAAKN,KAAKiB,GACVE,EAAarC,EAAKmC,EAAKC,GAAOZ,KAAMH,EAAcG,KAClDA,EAAKc,MACDtC,YAAeC,UACjBuB,EAAKN,KAAKiB,GACVD,EAAMlC,GACNwB,EAAKc,MACLC,EAAYvC,EAAKmC,EAAKC,GAAOZ,KAAMH,EAAcG,QAG9CjB,EAlBT,GAAIA,GAAMgB,UAAUP,QAAU,GAAsBG,SAAjBI,UAAU,MAAwBA,UAAU,GAC3Ec,EAAed,UAAUP,QAAU,GAAsBG,SAAjBI,UAAU,GAAmB5B,EAAO4B,UAAU,GACtFgB,EAAchB,UAAUP,QAAU,GAAsBG,SAAjBI,UAAU,GAAmB5B,EAAO4B,UAAU,GAErFC,IAiBJ,OAAOU,GAAM3B,GASf,QAASyB,GAAevB,GAGtB,MAAQA,EAAK+B,QAAQ,KAAK,CACxB,GAAIC,GAAKhC,EAAK+B,QAAQ,GACtB/B,GAAKW,OAAOqB,EAAI,GAIlB,MAAQhC,EAAK+B,QAAQ,MAAM,CACzB,GAAIC,GAAKhC,EAAK+B,QAAQ,IACtB/B,GAAKW,OAAOqB,EAAI,GAIlB,MAAQhC,EAAK+B,QAAQ,OAAO,CAC1B,GAAIC,GAAKhC,EAAK+B,QAAQ,KACtB/B,GAAKgC,GAAMhC,EAAKgC,EAAK,GAAK,WACnBhC,GAAKgC,SACLhC,GAAKgC,EAAK,GACjBhC,EAAKW,OAAOqB,EAAI,GAChBhC,EAAKW,OAAOqB,EAAK,EAAG,GAGtB,MAAOhC,GAST,QAASiC,GAAIC,EAAMnB,GACjB,MAAO/B,GAAQkD,EAAMnB,GAUvB,QAASoB,GAAID,EAAMnB,EAAMqB,GAEvB,MADApD,GAAQkD,EAAMnB,EAAMqB,GACbF,EAST,QAASG,GAAGH,EAAMnB,GAChB,GAAIuB,GAAMtD,EAAQkD,EAAMnB,EAExB,OADA/B,GAAQkD,EAAMnB,EAAM,MACbuB,EAWT,QAASC,GAAKL,EAAMM,EAAOC,GACzB,GAAIC,GAAK1D,EAAQkD,EAAMM,GACnBG,EAAK3D,EAAQkD,EAAMO,EAIvB,OAFAzD,GAAQkD,EAAMM,EAAOG,GACrB3D,EAAQkD,EAAMO,EAAOC,GACdR,EAWT,QAASU,GAAGV,EAAMM,EAAOC,EAAOI,GAC9B,GAAIC,GAAW9D,EAAQkD,EAAMM,EAAQ,QACjCO,EAAW/D,EAAQkD,EAAMO,EAAQ,QACjCO,EAAsB,WAAbH,KAA6B,CAE1C,IAAIC,GAAYC,EAEd,WADAE,SAAQC,MAAMV,EAAQ,MAAQC,EAAQ,0BAGxC,KAAK7C,EAAQkD,GAEX,WADAG,SAAQC,MAAM,2BAIhB,IAAIR,GAAK1D,EAAQkD,EAAMM,GACnBG,EAAK3D,EAAQkD,EAAMO,GACnBU,EAAUL,EAASf,QAAQW,GAC3BU,EAAUN,EAASf,QAAQY,EAG/BK,IAAUI,EAGNJ,GAAUF,EAASvC,SAAQyC,EAASF,EAASvC,QAC7CyC,GAAU,IAAGA,EAAS,GAE1BF,EAAW3C,EAAU2C,EAAUK,EAASH,GAS1C,QAASK,GAAGnB,EAAMnB,EAAMuC,GACtB,GAAIC,GAAWtB,EAAIC,EAAMnB,GACrByC,EAAYvB,EAAIC,EAAMnB,EAAO,QAC7B0C,EAAcD,EAAUzB,QAAQwB,GAEhCD,EAAMA,GAAO,CAEjB,IAAK1D,EAAQ4D,GAAb,CACAC,EAAcA,EAAcH,GAAO,EAAIG,EAAcH,EAAM,CAE3D,IAAId,GAAQzB,EACR0B,EAAQ1B,GAAQ,OAAS0C,EAAc,IAC3Cb,GAAGV,EAAMM,EAAOC,EAAO,WASzB,QAASiB,GAAKxB,EAAMnB,EAAMuC,GACxB,GAAIC,GAAWtB,EAAIC,EAAMnB,GACrByC,EAAYvB,EAAIC,EAAMnB,EAAO,QAC7B0C,EAAcD,EAAUzB,QAAQwB,GAChCD,EAAMA,GAAO,CAEjB,KAAK1D,EAAQ4D,GAAY,OAAO,CAChCC,GAAcA,EAAcH,GAAOE,EAAUjD,OAAS,EAAIiD,EAAUjD,OAAS,EAAIkD,EAAcH,CAE/F,IAAId,GAAQzB,EACR0B,EAAQ1B,GAAQ,OAAS0C,EAAc,IAC3Cb,GAAGV,EAAMM,EAAOC,EAAO,SAazB,QAASkB,GAAOzB,EAAMnB,EAAMqB,GAC1B,GAAIwB,GAAY9C,UAAUP,QAAU,GAAsBG,SAAjBI,UAAU,GAAmB,QAAUA,UAAU,GAEtF+C,EAAS5B,EAAIC,EAAMnB,EAAO,QAC1B+C,EAAQ/C,EAAKO,MAAM,KAAKyC,OAAO,SAAUC,GAC3C,MAAOA,KACNC,UAAU,GAAK,CAElB,KAAK9E,EAAU2E,GAEb,WADAb,SAAQC,MAAMnC,EAAO,2BAIvB,KAAKnB,EAAQiE,GAEX,WADAZ,SAAQC,MAAMnC,EAAO,2BAIvB,IAAImD,GAAwB,UAAdN,EACVO,EAASD,EAAUJ,EAAQ,EAAIA,CAInC,OAHAK,GAASC,EAAIP,EAAOtD,OAAQ4D,GAC5BA,EAASE,EAAI,EAAGF,GAChBN,EAAOlD,OAAOwD,EAAQ,EAAG/B,GAClBF,EAUT,QAASlD,GAAQkD,EAAMnB,EAAMqB,GAE3B,GAAMF,YAAgB1C,QAAtB,CAGA,IAAKuB,EAAM,MAAOmB,EAOlB,KAAK,GAJDlC,GAAOuB,EAAe+C,OAAOvD,GAAMO,MAAM,MAEzCiD,EAAMrC,EAEDsC,EAAI,EAAGA,EAAIxE,EAAKO,OAAQiE,IAE/B,GAAKxE,EAAKwE,GAAV,CAEA,GAAIA,IAAMxE,EAAKO,OAAS,EACTG,QAAT0B,EAGFmC,EAAIvE,EAAKwE,IAAMpC,EACI,OAAVA,IAGL9C,EAASiF,KACXA,EAAIvE,EAAKwE,IAAM,WACRD,GAAIvE,EAAKwE,KAId5E,EAAQ2E,KACVA,EAAIvE,EAAKwE,IAAM,KACfD,EAAI5D,OAAOX,EAAKwE,GAAI,SAGnB,IAAIpC,EAAO,CAGhB,GAAIqC,GAAWzE,EAAKwE,EAAI,EAGxB,KAAKD,EAAIvE,EAAKwE,IAAK,CAGjB,GAAIE,GAAsB,EAAXD,IAAiB,EAAI,QAAU,QAC7B,WAAbC,EACFH,EAAIvE,EAAKwE,OACa,WAAbE,IACTH,EAAIvE,EAAKwE,aAGR,CACL,GAAqB9D,SAAjB6D,EAAIvE,EAAKwE,IAEX,MACK,IAAqB,OAAjBD,EAAIvE,EAAKwE,IAClB,MAAO,MAIXD,EAAMA,EAAIvE,EAAKwE,IAGjB,MAAOD,IA7TT,GAAIrD,GAASF,MAAMvB,UA0Nf4E,EAAMM,KAAKN,IACXD,EAAMO,KAAKP,IAqGXN,GAAU7B,IAAKA,EAAKE,IAAKA,EAAKE,GAAIA,EAAIE,KAAMA,EAAMK,GAAIA,EAAIS,GAAIA,EAAIK,KAAMA,EAAMC,OAAQA,EAAQnC,KAAMA,EAAMZ,cAAeA,EAE7HhC,GAAQ,WAAakF,EACrBlF,EAAQqD,IAAMA,EACdrD,EAAQuD,IAAMA,EACdvD,EAAQyD,GAAKA,EACbzD,EAAQ2D,KAAOA,EACf3D,EAAQgE,GAAKA,EACbhE,EAAQyE,GAAKA,EACbzE,EAAQ8E,KAAOA,EACf9E,EAAQ+E,OAASA,EACjB/E,EAAQ4C,KAAOA,EACf5C,EAAQgC,cAAgBA","file":"jsonuri.min.js","sourcesContent":["/*!\n * JsonUri.js v1.5.1\n * (c) 2016 Linkjun <pk.link@163.com> https://jsonuri.com\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.JsonUri = global.JsonUri || {})));\n}(this, function (exports) { 'use strict';\n\n  function noop() {}\n\n  function isInteger(num) {\n    return Number.isInteger(num);\n  }\n\n  function isObject(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  function isArray(val) {\n    return Object.prototype.toString.call(val) === '[object Array]';\n  }\n\n  function objectForeach(obj, callback) {\n    Object.keys(obj).forEach(function (prop) {\n      callback(obj[prop], prop, obj);\n    });\n    return obj;\n  }\n\n  function arrayMove(arr, old_index, new_index) {\n    if (new_index >= arr.length) {\n      var k = new_index - arr.length;\n      while (k-- + 1) {\n        arr.push(undefined);\n      }\n    }\n    arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\n    return arr;\n  }\n\n  var arrPro = Array.prototype;\n\n  function normalizePath() {\n    for (var _len = arguments.length, path = Array(_len), _key = 0; _key < _len; _key++) {\n      path[_key] = arguments[_key];\n    }\n\n    //path = isArray(path) ? path : [path]\n    path = arrPro.concat.apply(arrPro, path).join('/').split('/');\n    path = ['/', combingPathKey(path).join('/')].join('');\n    if (path !== '/') {\n      path += '/';\n    }\n    return path;\n  }\n\n  /**\n   * [walk description] 遍历一个对象, 提供入栈和出栈两个回调, 操作原对象\n   * @param  {object} obj          [description]\n   * @param  {[type]} descentionFn [description]\n   * @param  {[type]} ascentionFn  [description]\n   * @return {[type]}              [description]\n   */\n\n  function walk() {\n    var obj = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n    var descentionFn = arguments.length <= 1 || arguments[1] === undefined ? noop : arguments[1];\n    var ascentionFn = arguments.length <= 2 || arguments[2] === undefined ? noop : arguments[2];\n\n    var path = [];\n\n    function _walk(obj) {\n      objectForeach(obj, function (val, key, raw) {\n        path.push(key);\n        descentionFn(val, key, raw, { path: normalizePath(path) });\n        path.pop();\n        if (val instanceof Object) {\n          path.push(key);\n          _walk(val);\n          path.pop();\n          ascentionFn(val, key, raw, { path: normalizePath(path) });\n        }\n      });\n      return obj;\n    }\n\n    return _walk(obj);\n  }\n\n  /**\n   * Combing path keys\n   * @param  {Array} keys  ['','menu','id','','.']\n   * @return {Array}       ['menu','id']\n   */\n\n  function combingPathKey(keys) {\n\n    // {empty}\n    while (~keys.indexOf('')) {\n      var _i = keys.indexOf('');\n      keys.splice(_i, 1);\n    }\n\n    // .\n    while (~keys.indexOf('.')) {\n      var _i = keys.indexOf('.');\n      keys.splice(_i, 1);\n    }\n\n    // ..\n    while (~keys.indexOf('..')) {\n      var _i = keys.indexOf('..');\n      keys[_i] = keys[_i - 1] = null;\n      delete keys[_i];\n      delete keys[_i - 1];\n      keys.splice(_i, 1);\n      keys.splice(_i - 1, 1);\n    }\n\n    return keys;\n  }\n\n  /**\n   * Get\n   * @param  {Object} data  typeof Object or Array.\n   * @param  {String} path  ex: '/menu/nav/list'.\n   * @param {[type]}        return value.\n   */\n  function get(data, path) {\n    return JsonUri(data, path);\n  }\n\n  /**\n   * Set\n   * @param  {Object} data  typeof Object or Array.\n   * @param  {String} path  ex: '/menu/nav/list'.\n   * @param  {Any}    value ex: {}.\n   * @param {[type]}        return data this.\n   */\n  function set(data, path, value) {\n    JsonUri(data, path, value);\n    return data;\n  }\n\n  /**\n   * Remove\n   * @param  {Object} data  typeof Object or Array.\n   * @param  {String} path  ex: '/menu/nav/list'.\n   * @return {Any}          The deleted value.\n   */\n  function rm(data, path) {\n    var tmp = JsonUri(data, path);\n    JsonUri(data, path, null);\n    return tmp;\n  }\n\n  /**\n   * Swap\n   * @param  {Object} data    data type can be object or array.\n   * @param  {String} pathA   ex: '/menu/nav/list/0'.\n   * @param  {String} pathB   ex: '/menu/nav/list/2'.\n   * @return {Object}         return data this.\n   * @description  `pathA` the data swap `pathB`.\n   */\n  function swap(data, pathA, pathB) {\n    var _a = JsonUri(data, pathA);\n    var _b = JsonUri(data, pathB);\n\n    JsonUri(data, pathA, _b);\n    JsonUri(data, pathB, _a);\n    return data;\n  }\n\n  /**\n   * Move\n   * @param  {Object} data      data type can be object or array.\n   * @param  {String} pathA     ex: '/menu/nav/list/0'.\n   * @param  {String} pathB     ex: '/menu/nav/list/2'.\n   * @param  {String} sequence  ex: 'before', default 'after'.\n   * @description Move data in the array.\n   */\n  function mv(data, pathA, pathB, sequence) {\n    var a_parent = JsonUri(data, pathA + '/../');\n    var b_parent = JsonUri(data, pathB + '/../');\n    var _index = sequence === 'before' ? -1 : 0;\n\n    if (a_parent != b_parent) {\n      console.error(pathA + ' , ' + pathB + ' not in the same Array.');\n      return;\n    }\n    if (!isArray(a_parent)) {\n      console.error('target parent not Array.');\n      return;\n    }\n\n    var _a = JsonUri(data, pathA);\n    var _b = JsonUri(data, pathB);\n    var a_index = a_parent.indexOf(_a);\n    var b_index = a_parent.indexOf(_b);\n\n    //target index\n    _index += b_index;\n\n    //target index the overflow\n    if (_index >= a_parent.length) _index = a_parent.length;\n    if (_index <= 0) _index = 0;\n\n    a_parent = arrayMove(a_parent, a_index, _index);\n  }\n\n  /**\n   * Up\n   * @param  {Object} data      data type can be object or array.\n   * @param  {String} pathA     ex: '/menu/nav/list/0'.\n   * @description Move up data in the array.\n   */\n  function up(data, path, gap) {\n    var dataItem = get(data, path);\n    var dataArray = get(data, path + '/../');\n    var targetIndex = dataArray.indexOf(dataItem);\n\n    var gap = gap || 1;\n\n    if (!isArray(dataArray)) return;\n    targetIndex = targetIndex - gap >= 0 ? targetIndex - gap : 0;\n\n    var pathA = path;\n    var pathB = path + ('/../' + targetIndex + '/');\n    mv(data, pathA, pathB, 'before');\n  }\n\n  /**\n   * Down\n   * @param  {Object} data      data type can be object or array.\n   * @param  {String} pathA     ex: '/menu/nav/list/0'.\n   * @description Move up data in the array.\n   */\n  function down(data, path, gap) {\n    var dataItem = get(data, path);\n    var dataArray = get(data, path + '/../');\n    var targetIndex = dataArray.indexOf(dataItem);\n    var gap = gap || 1;\n\n    if (!isArray(dataArray)) return false;\n    targetIndex = targetIndex + gap >= dataArray.length - 1 ? dataArray.length - 1 : targetIndex + gap;\n\n    var pathA = path;\n    var pathB = path + ('/../' + targetIndex + '/');\n    mv(data, pathA, pathB, 'after');\n  }\n\n  /**\n   * 在 path 之前 或者之后插入一个数据, 如果不是数组,控制台报错\n   * @param  {[type]} data      [description]\n   * @param  {[type]} path      [description]\n   * @param  {String} direction [description]\n   * @return {[type]}           [description]\n   */\n  var max = Math.max;\n  var min = Math.min;\n\n  function insert(data, path, value) {\n    var direction = arguments.length <= 3 || arguments[3] === undefined ? 'after' : arguments[3];\n\n    var parent = get(data, path + '/../');\n    var index = path.split('/').filter(function (item) {\n      return item;\n    }).slice(-1)[0] - 0;\n\n    if (!isInteger(index)) {\n      console.error(path + '不是数字');\n      return;\n    }\n\n    if (!isArray(parent)) {\n      console.error(path + '不是数组');\n      return;\n    }\n\n    var isAfter = direction === 'after';\n    var target = isAfter ? index + 1 : index;\n    target = min(parent.length, target);\n    target = max(0, target);\n    parent.splice(target, 0, value);\n    return data;\n  }\n\n  /**\n   * JsonUri\n   * @author Linkjun\n   * @param {Object | Array}    data  {k:1,s:[..]}\n   * @param {String}            path  '/s/0/'\n   * @param {Any}               value [0,{s:0},2,3,4]\n   */\n  function JsonUri(data, path, value) {\n    //Data must be Object.\n    if (!(data instanceof Object)) return;\n\n    //Path must be valid.\n    if (!path) return data;\n\n    //Combing Path Key.\n    var keys = combingPathKey(String(path).split('/'));\n    //Initialize data to the pointer.\n    var cur = data;\n\n    for (var i = 0; i < keys.length; i++) {\n      //Key must be valid.\n      if (!keys[i]) continue;\n\n      if (i === keys.length - 1) {\n        if (value != undefined) {\n\n          //set value.\n          cur[keys[i]] = value;\n        } else if (value === null) {\n\n          //delete value in the object.\n          if (isObject(cur)) {\n            cur[keys[i]] = null;\n            delete cur[keys[i]];\n          }\n\n          //delete value in the array.\n          if (isArray(cur)) {\n            cur[keys[i]] = null;\n            cur.splice(keys[i], 1);\n          }\n        }\n      } else if (value) {\n\n        //if set value\n        var _nextKey = keys[i + 1];\n\n        //curData is undefined.\n        if (!cur[keys[i]]) {\n\n          //create data container.\n          var _curType = _nextKey * 0 === 0 ? 'Array' : 'Object';\n          if (_curType === 'Array') {\n            cur[keys[i]] = [];\n          } else if (_curType === 'Object') {\n            cur[keys[i]] = {};\n          }\n        }\n      } else {\n        if (cur[keys[i]] === undefined) {\n          //Data path is undefined and return.\n          return undefined;\n        } else if (cur[keys[i]] === null) {\n          return null;\n        }\n      }\n\n      cur = cur[keys[i]];\n    };\n\n    return cur;\n  }\n\n  var index = { get: get, set: set, rm: rm, swap: swap, mv: mv, up: up, down: down, insert: insert, walk: walk, normalizePath: normalizePath };\n\n  exports['default'] = index;\n  exports.get = get;\n  exports.set = set;\n  exports.rm = rm;\n  exports.swap = swap;\n  exports.mv = mv;\n  exports.up = up;\n  exports.down = down;\n  exports.insert = insert;\n  exports.walk = walk;\n  exports.normalizePath = normalizePath;\n\n}));"]}