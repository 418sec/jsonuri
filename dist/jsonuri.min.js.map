{"version":3,"sources":["jsonuri.js"],"names":["global","factory","exports","module","define","amd","JsonUri","this","noop","isInteger","num","Number","isObject","val","Object","prototype","toString","call","isArray","objectForeach","obj","callback","_break","isBreak","_iterator","keys","_isArray","Array","_i2","Symbol","iterator","_ref","length","next","done","value","prop","normalizePath","_len","arguments","path","_key","arrPro","concat","apply","join","split","combingPathKey","walk","_walk","key","raw","_ref2","_gBreak","pop","console","log","push","descentionFn","ascentionFn","undefined","indexOf","filter","item","slice","_i","splice","data","String","cur","i","_nextKey","_curType","get","set","rm","tmp","swap","pathA","pathB","_a","_b","mv","direction","a_parent","b_parent","insert","up","gap","parent","index","target_index","error","down","isAfter","target","min","max","Math"],"mappings":"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","file":"jsonuri.min.js","sourcesContent":["/*!\n * JsonUri.js v1.5.11\n * (c) 2016 Linkjun <pk.link@163.com> https://jsonuri.com\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.JsonUri = global.JsonUri || {})));\n}(this, function (exports) { 'use strict';\n\n  function noop() {}\n\n  function isInteger(num) {\n    return Number.isInteger(num);\n  }\n\n  function isObject(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  function isArray(val) {\n    return Object.prototype.toString.call(val) === '[object Array]';\n  }\n\n  function objectForeach(obj, callback) {\n    var isBreak = false;\n    function _break() {\n      isBreak = true;\n    }\n\n    for (var _iterator = Object.keys(obj), _isArray = Array.isArray(_iterator), _i2 = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i2 >= _iterator.length) break;\n        _ref = _iterator[_i2++];\n      } else {\n        _i2 = _iterator.next();\n        if (_i2.done) break;\n        _ref = _i2.value;\n      }\n\n      var prop = _ref;\n\n      if (isBreak) break;\n      callback(obj[prop], prop, obj, { _break: _break });\n    }\n  }\n\n  var arrPro = Array.prototype;\n\n  function normalizePath() {\n    for (var _len = arguments.length, path = Array(_len), _key = 0; _key < _len; _key++) {\n      path[_key] = arguments[_key];\n    }\n\n    //path = isArray(path) ? path : [path]\n    path = arrPro.concat.apply(arrPro, path).join('/').split('/');\n    path = ['/', combingPathKey(path).join('/')].join('');\n    if (path !== '/') {\n      path += '/';\n    }\n    return path;\n  }\n\n  /**\n   * [walk description] 遍历一个对象, 提供入栈和出栈两个回调, 操作原对象\n   * @param  {object} obj          [description]\n   * @param  {[type]} descentionFn [description]\n   * @param  {[type]} ascentionFn  [description]\n   * @return {[type]}              [description]\n   */\n\n  function walk() {\n    var obj = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n    var descentionFn = arguments.length <= 1 || arguments[1] === undefined ? noop : arguments[1];\n    var ascentionFn = arguments.length <= 2 || arguments[2] === undefined ? noop : arguments[2];\n\n    var path = [];\n    function _walk(obj) {\n      objectForeach(obj, function (val, key, raw, _ref2) {\n        var _break = _ref2._break;\n\n        var isBreak = false;\n        function _gBreak() {\n          _break();\n          isBreak = true;\n          if (isArray(raw)) {\n            path.pop();\n          }\n        }\n\n        if (val === raw) {\n          console.log('Circular-reference: ' + normalizePath(path));\n          _break(); // break 只会跳出当前一层循环\n          return;\n        }\n\n        path.push(key);\n        descentionFn(val, key, raw, { path: normalizePath(path), _break: _gBreak });\n        path.pop();\n        if (val instanceof Object) {\n          path.push(key);\n          if (isBreak) return;\n          _walk(val);\n          path.pop();\n          ascentionFn(val, key, raw, { path: normalizePath(path), _break: _gBreak });\n        }\n      });\n      return obj;\n    }\n\n    return _walk(obj);\n  }\n\n  function indexOf(path) {\n    return path.split('/').filter(function (item) {\n      return item;\n    }).slice(-1)[0] - 0;\n  }\n\n  /**\n   * Combing path keys\n   * @param  {Array} keys  ['','menu','id','','.']\n   * @return {Array}       ['menu','id']\n   */\n\n  function combingPathKey(keys) {\n\n    // {empty}\n    while (~keys.indexOf('')) {\n      var _i = keys.indexOf('');\n      keys.splice(_i, 1);\n    }\n\n    // .\n    while (~keys.indexOf('.')) {\n      var _i = keys.indexOf('.');\n      keys.splice(_i, 1);\n    }\n\n    // ..\n    while (~keys.indexOf('..')) {\n      var _i = keys.indexOf('..');\n      keys[_i] = keys[_i - 1] = null;\n      delete keys[_i];\n      delete keys[_i - 1];\n      keys.splice(_i, 1);\n      keys.splice(_i - 1, 1);\n    }\n\n    return keys;\n  }\n\n  /**\n   * JsonUri\n   * @author Linkjun\n   * @param {Object | Array}    data  {k:1,s:[..]}\n   * @param {String}            path  '/s/0/'\n   * @param {Any}               value [0,{s:0},2,3,4]\n   */\n  function JsonUri(data, path, value) {\n    //Data must be Object.\n    if (!(data instanceof Object)) return;\n\n    //Path must be valid.\n    if (!path) return data;\n\n    //Combing Path Key.\n    var keys = combingPathKey(String(path).split('/'));\n    //Initialize data to the pointer.\n    var cur = data;\n\n    for (var i = 0; i < keys.length; i++) {\n      //Key must be valid.\n      if (!keys[i]) continue;\n\n      if (i === keys.length - 1) {\n        if (value != undefined) {\n\n          //set value.\n          cur[keys[i]] = value;\n        } else if (value === null) {\n\n          //delete value in the object.\n          if (isObject(cur)) {\n            cur[keys[i]] = null;\n            delete cur[keys[i]];\n          }\n\n          //delete value in the array.\n          if (isArray(cur)) {\n            cur[keys[i]] = null;\n            cur.splice(keys[i], 1);\n          }\n        }\n      } else if (value) {\n\n        //if set value\n        var _nextKey = keys[i + 1];\n\n        //curData is undefined.\n        if (!cur[keys[i]]) {\n\n          //create data container.\n          var _curType = _nextKey * 0 === 0 ? 'Array' : 'Object';\n          if (_curType === 'Array') {\n            cur[keys[i]] = [];\n          } else if (_curType === 'Object') {\n            cur[keys[i]] = {};\n          }\n        }\n      } else {\n        if (cur[keys[i]] === undefined) {\n          //Data path is undefined and return.\n          return undefined;\n        } else if (cur[keys[i]] === null) {\n          return null;\n        }\n      }\n\n      cur = cur[keys[i]];\n    };\n\n    return cur;\n  }\n\n  /**\n   * Get\n   * @param  {Object} data  typeof Object or Array.\n   * @param  {String} path  ex: '/menu/nav/list'.\n   * @param {[type]}        return value.\n   */\n  function get(data, path) {\n    return JsonUri(data, path);\n  }\n\n  /**\n   * Set\n   * @param  {Object} data  typeof Object or Array.\n   * @param  {String} path  ex: '/menu/nav/list'.\n   * @param  {Any}    value ex: {}.\n   * @param {[type]}        return data this.\n   */\n  function set(data, path, value) {\n    JsonUri(data, path, value);\n    return data;\n  }\n\n  /**\n   * Remove\n   * @param  {Object} data  typeof Object or Array.\n   * @param  {String} path  ex: '/menu/nav/list'.\n   * @return {Any}          The deleted value.\n   */\n  function rm(data, path) {\n    var tmp = JsonUri(data, path);\n    set(data, path, null);\n    return tmp;\n  }\n\n  /**\n   * Swap\n   * @param  {Object} data    data type can be object or array.\n   * @param  {String} pathA   ex: '/menu/nav/list/0'.\n   * @param  {String} pathB   ex: '/menu/nav/list/2'.\n   * @return {Object}         return data this.\n   * @description  `pathA` the data swap `pathB`.\n   */\n  function swap(data, pathA, pathB) {\n    var _a = JsonUri(data, pathA);\n    var _b = JsonUri(data, pathB);\n\n    set(data, pathA, _b);\n    set(data, pathB, _a);\n    return data;\n  }\n\n  /**\n   * Move\n   * @param  {Object} data      data type can be object or array.\n   * @param  {String} pathA     ex: '/menu/nav/list/0'.\n   * @param  {String} pathB     ex: '/menu/nav/list/2'.\n   * @param  {String} sequence  ex: 'before', default 'after'.\n   * @description Move data in the array.\n   */\n  function mv(data, pathA, pathB) {\n    var direction = arguments.length <= 3 || arguments[3] === undefined ? 'after' : arguments[3];\n\n    var a_parent = get(data, pathA + '/../');\n    var b_parent = get(data, pathB + '/../');\n    var _a = get(data, pathA);\n    var _b = get(data, pathB);\n    var a_index = indexOf(pathA);\n    var b_index = indexOf(pathB);\n\n    /*\n      如果同个数组中移动，要考虑移动后所需要移除的路径（PathA）数据指针有变，\n      所以要判断是同个数组，并且\n    */\n    if (a_parent === b_parent) return;\n    if (direction === 'before') {\n      //删除PathA\n      rm(data, pathA);\n      //放入新值\n      insert(data, pathB, _a, direction);\n    }\n\n    //放入新值\n    insert(data, pathB, _a, direction);\n    //删除PathA\n    rm(data, pathA);\n  }\n\n  /**\n   * Up\n   * @param  {Object} data      data type can be object or array.\n   * @param  {String} pathA     ex: '/menu/nav/list/0'.\n   * @description Move up data in the array.\n   */\n  function up(data, path) {\n    var gap = arguments.length <= 2 || arguments[2] === undefined ? 1 : arguments[2];\n\n    var parent = get(data, path + '/../');\n    var index = indexOf(path);\n    var target_index = index - gap;\n    var pathB = normalizePath(path, '/../' + target_index + '/');\n\n    if (!isArray(parent)) {\n      console.error('操作的不是数组');\n      return;\n    }\n    //移动溢出\n    if (index <= 0 || index >= parent.length) {\n      return;\n    }\n\n    mv(data, path, pathB, 'before');\n  }\n\n  /**\n   * Down\n   * @param  {Object} data      data type can be object or array.\n   * @param  {String} pathA     ex: '/menu/nav/list/0'.\n   * @description Move up data in the array.\n   */\n  function down(data, path) {\n    var gap = arguments.length <= 2 || arguments[2] === undefined ? 1 : arguments[2];\n\n    var parent = get(data, path + '/../');\n    var index = indexOf(path);\n    var target_index = index + gap;\n    var pathB = normalizePath(path, '/../' + target_index + '/');\n\n    if (!isArray(parent)) {\n      console.error('操作的不是数组');\n      return;\n    }\n    //移动溢出\n    if (index < 0 || index >= parent.length) {\n      return;\n    }\n\n    mv(data, path, pathB, 'after');\n  }\n\n  /**\n   * 在 path 之前 或者之后插入一个数据, 如果不是数组,控制台报错\n   * @param  {[type]} data      [description]\n   * @param  {[type]} path      [description]\n   * @param  {String} direction [description]\n   * @return {[type]}           [description]\n   */\n  var max = Math.max;\n  var min = Math.min;\n\n  function insert(data, path, value) {\n    var direction = arguments.length <= 3 || arguments[3] === undefined ? 'after' : arguments[3];\n\n    var parent = get(data, path + '/../');\n    var index = path.split('/').filter(function (item) {\n      return item;\n    }).slice(-1)[0] - 0;\n\n    if (!isInteger(index)) {\n      console.error(path + '不是数字');\n      return;\n    }\n\n    if (!isArray(parent)) {\n      console.error(path + '不是数组');\n      return;\n    }\n\n    var isAfter = direction === 'after';\n    var target = isAfter ? index + 1 : index;\n    target = min(parent.length, target);\n    target = max(0, target);\n    parent.splice(target, 0, value);\n    return data;\n  }\n\n  var index = { get: get, set: set, rm: rm, swap: swap, mv: mv, up: up, down: down, insert: insert, walk: walk, normalizePath: normalizePath };\n\n  exports['default'] = index;\n  exports.get = get;\n  exports.set = set;\n  exports.rm = rm;\n  exports.swap = swap;\n  exports.mv = mv;\n  exports.up = up;\n  exports.down = down;\n  exports.insert = insert;\n  exports.walk = walk;\n  exports.normalizePath = normalizePath;\n\n}));"]}