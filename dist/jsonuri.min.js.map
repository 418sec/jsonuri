{"version":3,"sources":["jsonuri.js"],"names":["global","factory","exports","module","define","amd","JsonUri","this","noop","isInteger","num","Number","isObject","val","Object","prototype","toString","call","isArray","objectForeach","obj","callback","keys","forEach","prop","arrayMove","arr","old_index","new_index","length","k","push","undefined","splice","walk","makePath","pathArr","join","_walk","key","raw","path","descentionFn","pop","ascentionFn","arguments","console","log","JSON","stringify","combingPathKey","indexOf","_i","get","data","set","value","rm","tmp","swap","pathA","pathB","_a","_b","mv","sequence","a_parent","b_parent","_index","error","a_index","b_index","up","gap","dataItem","dataArray","targetIndex","down","insert","direction","parent","index","split","filter","item","slice","isAfter","target","min","max","String","cur","i","_nextKey","_curType","Math"],"mappings":"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","file":"jsonuri.min.js","sourcesContent":["/*!\n * JsonUri.js v1.3.0\n * (c) 2016 Linkjun <pk.link@163.com> https://jsonuri.com\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.JsonUri = global.JsonUri || {})));\n}(this, function (exports) { 'use strict';\n\n  function noop() {}\n\n  function isInteger(num) {\n    return Number.isInteger(num);\n  }\n\n  function isObject(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  function isArray(val) {\n    return Object.prototype.toString.call(val) === '[object Array]';\n  }\n\n  function objectForeach(obj, callback) {\n    Object.keys(obj).forEach(function (prop) {\n      callback(obj[prop], prop, obj);\n    });\n    return obj;\n  }\n\n  function arrayMove(arr, old_index, new_index) {\n    if (new_index >= arr.length) {\n      var k = new_index - arr.length;\n      while (k-- + 1) {\n        arr.push(undefined);\n      }\n    }\n    arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\n    return arr;\n  }\n\n  /**\n   * [walk description] 遍历一个对象, 提供入栈和出栈两个回调, 操作原对象\n   * @param  {object} obj          [description]\n   * @param  {[type]} descentionFn [description]\n   * @param  {[type]} ascentionFn  [description]\n   * @return {[type]}              [description]\n   */\n\n  function walk() {\n    var obj = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n    var descentionFn = arguments.length <= 1 || arguments[1] === undefined ? noop : arguments[1];\n    var ascentionFn = arguments.length <= 2 || arguments[2] === undefined ? noop : arguments[2];\n\n    console.log(JSON.stringify(obj, null, 2));\n    var path = [];\n    function makePath(pathArr) {\n      return '/' + pathArr.join('/') + '/';\n    }\n    function _walk(obj) {\n      objectForeach(obj, function (val, key, raw) {\n        path.push(key);\n        descentionFn(val, key, raw, makePath(path));\n        if (val instanceof Object) {\n          _walk(val);\n          path.pop();\n          ascentionFn(val, key, raw, makePath(path));\n        }\n      });\n      return obj;\n    }\n\n    return _walk(obj);\n  }\n\n  /**\n   * Combing path keys\n   * @param  {Array} keys  ['','menu','id','','.']\n   * @return {Array}       ['menu','id']\n   */\n\n  function combingPathKey(keys) {\n\n    // {empty}\n    while (~keys.indexOf('')) {\n      var _i = keys.indexOf('');\n      keys.splice(_i, 1);\n    }\n\n    // .\n    while (~keys.indexOf('.')) {\n      var _i = keys.indexOf('.');\n      keys.splice(_i, 1);\n    }\n\n    // ~\n    while (~keys.indexOf('~')) {\n      keys = [];\n    }\n\n    // ...\n    while (~keys.indexOf('...')) {\n      var _i = keys.indexOf('...');\n      if (_i - 2 <= 0) return keys = [];\n\n      keys[_i] = keys[_i - 1] = keys[_i - 2] = null;\n      delete keys[_i];\n      delete keys[_i - 1];\n      delete keys[_i - 2];\n      keys.splice(_i, 1);\n      keys.splice(_i - 1, 1);\n      keys.splice(_i - 2, 1);\n    }\n\n    // ..\n    while (~keys.indexOf('..')) {\n      var _i = keys.indexOf('..');\n      keys[_i] = keys[_i - 1] = null;\n      delete keys[_i];\n      delete keys[_i - 1];\n      keys.splice(_i, 1);\n      keys.splice(_i - 1, 1);\n    }\n\n    return keys;\n  }\n\n  /**\n   * Get\n   * @param  {Object} data  typeof Object or Array.\n   * @param  {String} path  ex: '/menu/nav/list'.\n   * @param {[type]}        return value.\n   */\n  function get(data, path) {\n    return JsonUri(data, path);\n  }\n\n  /**\n   * Set\n   * @param  {Object} data  typeof Object or Array.\n   * @param  {String} path  ex: '/menu/nav/list'.\n   * @param  {Any}    value ex: {}.\n   * @param {[type]}        return data this.\n   */\n  function set(data, path, value) {\n    JsonUri(data, path, value);\n    return data;\n  }\n\n  /**\n   * Remove\n   * @param  {Object} data  typeof Object or Array.\n   * @param  {String} path  ex: '/menu/nav/list'.\n   * @return {Any}          The deleted value.\n   */\n  function rm(data, path) {\n    var tmp = JsonUri(data, path);\n    JsonUri(data, path, null);\n    return tmp;\n  }\n\n  /**\n   * Swap\n   * @param  {Object} data    data type can be object or array.\n   * @param  {String} pathA   ex: '/menu/nav/list/0'.\n   * @param  {String} pathB   ex: '/menu/nav/list/2'.\n   * @return {Object}         return data this.\n   * @description  `pathA` the data swap `pathB`.\n   */\n  function swap(data, pathA, pathB) {\n    var _a = JsonUri(data, pathA);\n    var _b = JsonUri(data, pathB);\n\n    JsonUri(data, pathA, _b);\n    JsonUri(data, pathB, _a);\n    return data;\n  }\n\n  /**\n   * Move\n   * @param  {Object} data      data type can be object or array.\n   * @param  {String} pathA     ex: '/menu/nav/list/0'.\n   * @param  {String} pathB     ex: '/menu/nav/list/2'.\n   * @param  {String} sequence  ex: 'before', default 'after'.\n   * @description Move data in the array.\n   */\n  function mv(data, pathA, pathB, sequence) {\n    var a_parent = JsonUri(data, pathA + '/../');\n    var b_parent = JsonUri(data, pathB + '/../');\n    var _index = sequence === 'before' ? -1 : 0;\n\n    if (a_parent != b_parent) {\n      console.error(pathA + ' , ' + pathB + ' not in the same Array.');\n      return;\n    }\n    if (!isArray(a_parent)) {\n      console.error('target parent not Array.');\n      return;\n    }\n\n    var _a = JsonUri(data, pathA);\n    var _b = JsonUri(data, pathB);\n    var a_index = a_parent.indexOf(_a);\n    var b_index = a_parent.indexOf(_b);\n\n    //target index\n    _index += b_index;\n\n    //target index the overflow\n    if (_index >= a_parent.length) _index = a_parent.length;\n    if (_index <= 0) _index = 0;\n\n    a_parent = arrayMove(a_parent, a_index, _index);\n  }\n\n  /**\n   * Up\n   * @param  {Object} data      data type can be object or array.\n   * @param  {String} pathA     ex: '/menu/nav/list/0'.\n   * @description Move up data in the array.\n   */\n  function up(data, path, gap) {\n    var dataItem = get(data, path);\n    var dataArray = get(data, path + '/../');\n    var targetIndex = dataArray.indexOf(dataItem);\n\n    var gap = gap || 1;\n\n    if (!isArray(dataArray)) return;\n    targetIndex = targetIndex - gap >= 0 ? targetIndex - gap : 0;\n\n    var pathA = path;\n    var pathB = path + ('/../' + targetIndex + '/');\n    console.log(data, pathA, pathB);\n    mv(data, pathA, pathB, 'before');\n  }\n\n  /**\n   * Down\n   * @param  {Object} data      data type can be object or array.\n   * @param  {String} pathA     ex: '/menu/nav/list/0'.\n   * @description Move up data in the array.\n   */\n  function down(data, path, gap) {\n    var dataItem = get(data, path);\n    var dataArray = get(data, path + '/../');\n    var targetIndex = dataArray.indexOf(dataItem);\n    var gap = gap || 1;\n\n    if (!isArray(dataArray)) return false;\n    targetIndex = targetIndex + gap >= dataArray.length - 1 ? dataArray.length - 1 : targetIndex + gap;\n\n    var pathA = path;\n    var pathB = path + ('/../' + targetIndex + '/');\n    console.log(pathA, pathB);\n    mv(data, pathA, pathB, 'after');\n  }\n\n  /**\n   * 在 path 之前 或者之后插入一个数据, 如果不是数组,控制台报错\n   * @param  {[type]} data      [description]\n   * @param  {[type]} path      [description]\n   * @param  {String} direction [description]\n   * @return {[type]}           [description]\n   */\n  var max = Math.max;\n  var min = Math.min;\n\n  function insert(data, path, value) {\n    var direction = arguments.length <= 3 || arguments[3] === undefined ? 'after' : arguments[3];\n\n    var parent = get(data, path + '/../');\n    var index = path.split('/').filter(function (item) {\n      return item;\n    }).slice(-1)[0] - 0;\n\n    if (!isInteger(index)) {\n      console.error(path + '不是数字');\n      return;\n    }\n\n    if (!isArray(parent)) {\n      console.error(path + '不是数组');\n      return;\n    }\n\n    var isAfter = direction === 'after';\n    var target = isAfter ? index + 1 : index;\n    target = min(parent.length, target);\n    target = max(0, target);\n    parent.splice(target, 0, value);\n    return data;\n  }\n\n  /**\n   * JsonUri\n   * @author Linkjun\n   * @param {Object | Array}    data  {k:1,s:[..]}\n   * @param {String}            path  '/s/0/'\n   * @param {Any}               value [0,{s:0},2,3,4]\n   */\n  function JsonUri(data, path, value) {\n    //Data must be Object.\n    if (!(data instanceof Object)) return;\n\n    //Path must be valid.\n    if (!path) return data;\n\n    //Combing Path Key.\n    var keys = combingPathKey(String(path).split('/'));\n    //Initialize data to the pointer.\n    var cur = data;\n\n    for (var i = 0; i < keys.length; i++) {\n      //Key must be valid.\n      if (!keys[i]) continue;\n\n      if (i === keys.length - 1) {\n        if (value != undefined) {\n\n          //set value.\n          cur[keys[i]] = value;\n        } else if (value === null) {\n\n          //delete value in the object.\n          if (isObject(cur)) {\n            cur[keys[i]] = null;\n            delete cur[keys[i]];\n          }\n\n          //delete value in the array.\n          if (isArray(cur)) {\n            cur[keys[i]] = null;\n            cur.splice(keys[i], 1);\n          }\n        }\n      } else if (value) {\n\n        //if set value\n        var _nextKey = keys[i + 1];\n\n        //curData is undefined.\n        if (!cur[keys[i]]) {\n\n          //create data container.\n          var _curType = _nextKey * 0 === 0 ? 'Array' : 'Object';\n          if (_curType === 'Array') {\n            cur[keys[i]] = [];\n          } else if (_curType === 'Object') {\n            cur[keys[i]] = {};\n          }\n        }\n      } else {\n        if (cur[keys[i]] === undefined) {\n          //Data path is undefined and return.\n          return undefined;\n        } else if (cur[keys[i]] === null) {\n          return null;\n        }\n      }\n\n      cur = cur[keys[i]];\n    }\n    ;\n\n    return cur;\n  }\n\n  exports.get = get;\n  exports.set = set;\n  exports.swap = swap;\n  exports.mv = mv;\n  exports.up = up;\n  exports.down = down;\n  exports.rm = rm;\n  exports.insert = insert;\n  exports.walk = walk;\n\n}));"]}