! function (r, e) {
  "object" == typeof exports && "undefined" != typeof module ? e(exports) : "function" == typeof define && define.amd ? define(["exports"], e) : (r = r || self, e(r.jsonuri = {}))
}(this, function (r) {
  "use strict";
  var e = function () {},
    t = Array.isArray,
    n = function (r) {
      return "string" == typeof r
    },
    i = function (r) {
      return Number.isInteger(r)
    },
    o = function (r) {
      return i(r) && r >= 0
    },
    a = /\//,
    f = function (r) {
      return a.test(r)
    },
    u = function (r) {
      var e = typeof r;
      return null != r && ("object" === e || "function" === e)
    },
    p = function (r) {
      return r + ""
    },
    l = function (r) {
      console.error(r)
    },
    s = function (r, e, n) {
      if (!t(r)) return void(r[e] = n);
      if ("length" === e) {
        if (!o(n)) throw new Error("value: " + n + " is not a natural number");
        return n > r.length && (r.length = n), void r.splice(n)
      }
      var i = +e;
      if (!o(i)) return void l("key: " + e + " is not a natural number");
      r.length = Math.max(r.length, i), r.splice(i, 1, n)
    },
    c = function (r, e) {
      if (t(r)) {
        var n = +e;
        if (!o(n)) return;
        r.splice(n, 1)
      } else delete r[e]
    },
    h = function (r, e, t, n) {
      if (void 0 === n && (n = "after"), e < 0 || e > r.length) throw new Error("the Index Out of Bounds");
      switch (n) {
        case "before":
          e -= 1;
          break;
        case "append":
          l("TODO")
      }
      r.splice(e, 0, t)
    },
    v = function (r) {
      var e, t = r.path || "";
      for (r.keys ? t || (e = r.keys) : e = r.path.split("/"), e = e.filter(Boolean); ~e.indexOf("");) {
        n = e.indexOf("");
        e.splice(n, 1)
      }
      for (; ~e.indexOf(".");) {
        var n = e.indexOf(".");
        e.splice(n, 1)
      }
      for (; ~e.indexOf("..");) e[n = e.indexOf("..")] = e[n - 1] = "", delete e[n], delete e[n - 1], e.splice(n, 1), e.splice(n - 1, 1);
      return {
        keys: e,
        path: e.join("/")
      }
    },
    d = function (r, e) {
      if (null == r) return r;
      if ("" === (e = p(e))) return r;
      if (!f(e)) return r[e];
      var t, n = v({
        path: e
      }).keys;
      if (!n.length) return r;
      for (var i = n.length, o = 0; o < i && null != (t = (o ? t : r)[n[o]]); ++o);
      return t
    },
    y = function (r, e, t) {
      if (e = p(e), !r || !e) return l("the parameter is illegal");
      if (!f(e)) return s(r, e, t);
      for (var n = v({
          path: e
        }).keys, i = 0, o = n.length; i < o; i++) {
        var a = n[i];
        null == r[a] && (r[a] = {}), i === o - 1 ? s(r, a, t) : r = r[a]
      }
    },
    b = function (r, e) {
      if (e = p(e), r && e) {
        if (!f(e)) return void c(r, e);
        var t = d(r, e + "/..");
        if (t) {
          var n = v({
            path: e
          }).keys.pop() || "";
          c(t, n)
        }
      }
    },
    g = function (r, e, t) {
      if (e = p(e), t = p(t), !(r && e && t && n(e) && n(t))) return l("the parameter is illegal");
      var i = d(r, e),
        o = d(r, t);
      y(r, t, i), y(r, e, o)
    },
    k = function (r, e, n, i) {
      if (e = p(e), !r) return l("the parameter is illegal");
      if (!i) throw new Error("direction must be 'before' | 'after' | 'append'");
      var o = d(r, e + "/..");
      if (!t(o)) throw new Error("insert node must be a Array");
      var a = +v({
          path: e
        }).keys.pop(),
        f = a;
      "after" === i ? f = a + 1 : "before" === i && (f = a), h(o, f, n)
    },
    m = Array.prototype,
    w = function () {
      for (var r = [], e = 0; e < arguments.length; e++) r[e] = arguments[e];
      var t = m.concat.apply(m, r).join("/").split("/");
      return v({
        keys: t
      }).path
    },
    x = function (r, e, i, o) {
      if (e = p(e), i = p(i), !(r && e && i && n(e) && n(i))) return l("the parameter is illegal");
      if (e !== i) {
        var a = d(r, i),
          f = d(r, e),
          s = d(r, i + "/.."),
          h = +(v({
            path: e
          }).keys.pop() || ""),
          g = +(v({
            path: i
          }).keys.pop() || "");
        if (t(s)) {
          if (!o) throw new Error("direction must be 'before' | 'after' | 'append'");
          var m = w() === w();
          return k(r, i, f, o), m ? void c(s, h + (g > h ? 0 : 1)) : void b(r, e)
        }
        if (!u(a)) throw new Error("'" + i + "': " + a + " is primitive values");
        y(r, i + "/" + e, f), b(r, e)
      }
    },
    O = function (r, e, n, i) {
      if (void 0 === i && (i = 1), e = p(e), !(o(i) && i > 0)) return l("the parameter is illegal");
      if (!r) return l("the parameter is illegal");
      var a = d(r, e + "/..");
      if (!t(a)) return l("must be a Array");
      var f = a.length,
        u = +v({
          path: e
        }).keys.pop();
      if (o(u) && !(u > f - 1)) {
        var s = u + n * i;
        s <= 0 && (s = 0), s > f - 1 && (s = f - 1);
        var y = a[u];
        c(a, u), h(a, s, y)
      }
    },
    j = function (r, e, t) {
      O(r, e, -1, t)
    },
    E = function (r, e, t) {
      O(r, e, 1, t)
    },
    _ = function (r, e) {
      var t = +v({
        path: r
      }).keys.pop();
      return i(t) ? "prev" === e ? w() : "next" === e ? w() : null : null
    },
    A = function (r, e) {
      if (void 0 === e && (e = []), !u(r)) return !1;
      e.push(r);
      for (var t in r) {
        var n = r[t];
        if (u(n) && (~e.indexOf(n) || A(n, e.slice()))) return !0
      }
      return !1
    },
    P = function (r, e) {
      for (var t = !1, n = function () {
          t = !0
        }, i = 0, o = Object.keys(r); i < o.length; i++) {
        var a = o[i];
        if (t) break;
        e(r[a], a, r, {
          _break: n
        })
      }
    },
    B = function (r, n, i) {
      if (void 0 === r && (r = {}), void 0 === n && (n = e), void 0 === i && (i = e), A(r)) throw new Error("obj is a circular structure");
      var o = [],
        a = function (r) {
          return P(r, function (r, e, f, p) {
            var l = p._break,
              s = !1,
              c = function () {
                l(), s = !0, t(f) && o.pop()
              };
            if (o.push(e), n(r, e, f, {
                path: w(),
                _break: c
              }), o.pop(), u(r)) {
              if (o.push(e), s) return;
              a(r), o.pop(), i(r, e, f, {
                path: w(),
                _break: c
              })
            }
          }), r
        };
      return a(r)
    };
  r._computePath = _, r.down = E, r.get = d, r.insert = k, r.isCircular = A, r.mv = x, r.normalizePath = w, r.rm = b, r.set = y, r.swap = g, r.up = j, r.walk = B, Object.defineProperty(r, "__esModule", {
    value: !0
  })
});
